####Creates the Horizontal Menu based on the path

#macro(fixBreaks $stringToFix)
	${UtilMethods.fixBreaks($stringToFix)}
#end



##dot parse
#macro(dotParse $_dotParsePath)
  #if ($UtilMethods.isSet($list))
    #if (!$UtilMethods.isSet($_dotParseListHeap))
      #set ($_dotParseListHeap = $contents.getEmptyList())
    #end
    
    #set ($_dotParseDummyVariable = $_dotParseListHeap.add($list))
  #end

  #if ($UtilMethods.isSet($content))
    #if (!$UtilMethods.isSet($_dotParseContentHeap))
      #set ($_dotParseContentHeap = $contents.getEmptyList())
    #end
    
    #set ($_dotParseDummyVariable = $_dotParseContentHeap.add($content))
  #end

  #if ($velutil.isVelocityFile($_dotParsePath))
    #if ($_dotParsePath.length() > 3 && $_dotParsePath.startsWith("//"))
      ##finds first / after //
  	  #set($_dotParseIndex1 = $_dotParsePath.indexOf("/",2))
  	  ##if index1 exists
  	  #if ($_dotParseIndex1 > -1)
  		##get the host from the path
  		#set($_dotParsePathHost = $_dotParsePath.substring(2,$_dotParseIndex1))
  		##get the file path from the path
  		#set($_dotParsePath = $_dotParsePath.substring($_dotParseIndex1,$_dotParsePath.length()))
  	  #end
	  #if ($UtilMethods.isSet($_dotParsePathHost))
		  ##we found a host, we search the host by hostname
		  #set ($_dotParseHost = $webapi.resolveHostName($_dotParsePathHost))
		  #if ($_dotParseHost && $UtilMethods.isSet($_dotParseHost.identifier))
			#set($_dotParseHostId = $_dotParseHost.identifier)
		  #end
	  #end
    #end

    #if (!$UtilMethods.isSet($dontShowIcon) || !$dontShowIcon)
      #if($EDIT_MODE)
	      #if(!$_dotParseHostId)
	      	#set($_dotParseHostId = '')
	      #end
        #set($_dotParseInode = ${webapi.getAssetInode($_dotParsePath, $_dotParseHostId)})
        #if($InodeUtils.isSet($_dotParseInode)&& ${webapi.doesUserHasPermissionOverFile($_dotParseInode, 2)})
          <div  class="dot_parseIcon"> <a href="javascript:parent.editFile('${_dotParseInode}'); " title="$_dotParsePath"><span class="editIcon"></span></a></div>
          #set ($_dotParseInode = '')
        #end
      #end
    #end

    #if($UtilMethods.isSet($_dotParseHostId))
  	  #set($_dotParseRealPath = $webapi.getAssetPath($_dotParsePath, $_dotParseHostId))
  	  #set ($_dotParseHostId = '')
    #else
  	  #set($_dotParseRealPath = $webapi.getAssetPath($_dotParsePath))
    #end

    #if($UtilMethods.isSet($_dotParseRealPath))
      $velutil.mergeTemplate($_dotParseRealPath)
    #else
      #if($EDIT_MODE)
        <p><b>The velocity file you want to  ${esc.h}dotParse ($_dotParsePath) doesn't exist, please change the path and try again.</b></p>
      #end
    #end
  
    #set ($_dotParsePath = '')
    #set ($_dotParseRealPath = '')
  #else
	#if($EDIT_MODE)
	       <p><b>${esc.h}dotParse only parses the following file types: .vtl, .vm and .html </b></p>
	#end
  #end

  #if ($UtilMethods.isSet($_dotParseListHeap) && (0 < $_dotParseListHeap.size()))
    #set ($list = $_dotParseListHeap.remove($math.sub($_dotParseListHeap.size(), 1)))
  #end

  #if ($UtilMethods.isSet($_dotParseContentHeap) && (0 < $_dotParseContentHeap.size()))
    #set ($content = $_dotParseContentHeap.remove($math.sub($_dotParseContentHeap.size(), 1)))
  #end
#end


##dotInclude
#macro(dotInclude $_dotParsePath)
  #if ($UtilMethods.isSet($list))
    #if (!$UtilMethods.isSet($_dotParseListHeap))
      #set ($_dotParseListHeap = $contents.getEmptyList())
    #end
    
    #set ($_dotParseDummyVariable = $_dotParseListHeap.add($list))
  #end

  #if ($UtilMethods.isSet($content))
    #if (!$UtilMethods.isSet($_dotParseContentHeap))
      #set ($_dotParseContentHeap = $contents.getEmptyList())
    #end
    
    #set ($_dotParseDummyVariable = $_dotParseContentHeap.add($content))
  #end


    #if ($_dotParsePath.length() > 3 && $_dotParsePath.startsWith("//"))
      ##finds first / after //
  	  #set($_dotParseIndex1 = $_dotParsePath.indexOf("/",2))
  	  ##if index1 exists
  	  #if ($_dotParseIndex1 > -1)
  		##get the host from the path
  		#set($_dotParsePathHost = $_dotParsePath.substring(2,$_dotParseIndex1))
  		##get the file path from the path
  		#set($_dotParsePath = $_dotParsePath.substring($_dotParseIndex1,$_dotParsePath.length()))
  	  #end
	  #if ($UtilMethods.isSet($_dotParsePathHost))
		  ##we found a host, we search the host by hostname
		  #set ($_dotParseHost = $webapi.resolveHostName($_dotParsePathHost))
		  #if ($_dotParseHost && $UtilMethods.isSet($_dotParseHost.identifier))
			#set($_dotParseHostId = $_dotParseHost.identifier)
		  #end
	  #end
    #end

    #if (!$UtilMethods.isSet($dontShowIcon) || !$dontShowIcon)
      #if($EDIT_MODE)
	      #if(!$_dotParseHostId)
	      	#set($_dotParseHostId = '')
	      #end
        #set($_dotParseInode = ${webapi.getAssetInode($_dotParsePath, $_dotParseHostId)})
        #if($InodeUtils.isSet($_dotParseInode)&& ${webapi.doesUserHasPermissionOverFile($_dotParseInode, 2)})
          <div  class="dot_parseIcon"> <a href="javascript:parent.editFile('${_dotParseInode}'); " title="$_dotParsePath"><span class="editIcon"></span></a></div>
          #set ($_dotParseInode = '')
        #end
      #end
    #end

    #if($UtilMethods.isSet($_dotParseHostId))
  	  #set($_dotParseRealPath = $webapi.getAssetPath($_dotParsePath, $_dotParseHostId))
  	  #set ($_dotParseHostId = '')
    #else
  	  #set($_dotParseRealPath = $webapi.getAssetPath($_dotParsePath))
    #end

    #if($UtilMethods.isSet($_dotParseRealPath))
      #include($_dotParseRealPath)
    #else
      #if($EDIT_MODE)
        <p><b>The file you want to  ${esc.h}include ($_dotParsePath) doesn't exist, please change the path and try again.</b></p>
      #end
    #end
  
    #set ($_dotParsePath = '')
    #set ($_dotParseRealPath = '')


  #if ($UtilMethods.isSet($_dotParseListHeap) && (0 < $_dotParseListHeap.size()))
    #set ($list = $_dotParseListHeap.remove($math.sub($_dotParseListHeap.size(), 1)))
  #end

  #if ($UtilMethods.isSet($_dotParseContentHeap) && (0 < $_dotParseContentHeap.size()))
    #set ($content = $_dotParseContentHeap.remove($math.sub($_dotParseContentHeap.size(), 1)))
  #end
#end



##parseContainer
#macro( parseContainer $containerIdentifier )
   #if($EDIT_MODE || $PREVIEW_MODE)
		$velutil.mergeTemplate("/working/${containerIdentifier}.container")
   #else
		$velutil.mergeTemplate("/live/${containerIdentifier}.container")
   #end
#end

#macro(editContentlet $CONTENT_INODE)
	## No container inode is passed because a contentlet is edited no added to the container
	#set($_containerInode = "")
	#if($EDIT_MODE)
		#set($_hasPermission = $contents.doesUserHasPermission($CONTENT_INODE, 2, $EDIT_MODE))
		#if($_hasPermission)
			<a href="javascript:parent.editContentlet('$_containerInode', '$CONTENT_INODE'); " class="dotEditListBox">$languagewebapi.getFromUserLanguage("modes.Edit-Content")</a>
		#end
	#end
#end

#macro(addContentlet $STRUCTURE_INODE $CONTENT_NAME)
	#if($EDIT_MODE)
	    <a href="javascript:parent.addContentletChapter('$STRUCTURE_INODE'); "><img src="/html/images/icons/page.png" alt="" width="15" height="15" border="0">$!{CONTENT_NAME}</a>
	#end
#end

#macro(editEvent $EVENT_INODE)
	#if($EDIT_MODE)
		<a href="javascript:parent.editEvent('$EVENT_INODE'); "><img src="/html/images/preview/btn_edit_active.gif" alt="" width="15" height="15" border="0"></a>
	#end
#end



#macro (pullRSSFeed $url)

   #if(!$UtilMethods.isSet($rssFilter))
      #set($rssFilter = [''])
   #end
   
   #if(!$UtilMethods.isSet($rssTotal))
      #set($rssTotal = -1)
   #end
   
   #if(!$UtilMethods.isSet($ingesterName))
      #set($ingesterName = 'RSSIngester')
   #end
   
   #if(!$UtilMethods.isSet($rssUserAgent))
      #set($rssUserAgent = '')
   #end
	
   #set($rssFile = $rssapi.getFile($url,$ingesterName,$rssUserAgent))

   $velutil.mergeTemplate($rssFile) 

   #set($list = $rssapi.filterAndTop($list,$rssFilter,$rssTotal))

#end

#macro (getResultsFromXMLFeed)
   
   #if(!$UtilMethods.isSet($rssFilter))
      #set($rssFilter = [''])
   #end
   
   #set($rssTotal = $limit)
   #if(!$UtilMethods.isSet($rssTotal))
      #set($rssTotal = -1)
   #end
   
   #if($parameters)
      #if($url.indexOf('?') == -1)
         #set($url = "${url}?${parameters}")
      #else
         #set($url = "${url}&${parameters}")
      #end
   #end

   #if(!$UtilMethods.isSet($ingesterName))
      #set($ingesterName = 'RSSIngester')
   #end
   
   #if(!$UtilMethods.isSet($rssUserAgent))
         #set($rssUserAgent = '')
   #end
   
   #set($rssFile = $rssapi.getFile($url,$ingesterName,$rssUserAgent))

   $velutil.mergeTemplate($rssFile)

   #set($list = $rssapi.filterAndTop($list,$rssFilter,$rssTotal))
   #if($orderBy)
      #set($list = $sorter.sort($list,$orderBy))
   #end
   
#end

